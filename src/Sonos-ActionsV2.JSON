{
  "Browse": {
    "endpoint": "/MediaServer/ContentDirectory/Control",
    "args": {
      "InstanceID": 0,
      "BrowseFlag": "BrowseDirectChildren",
      "Filter": "*",
      "StartingIndex": "0",
      "RequestedCount": "100",
      "SortCriteria": "",
      "ObjectID": "FV:2"
    },
    "returnValueName": "Result",
    "info": "USED- Result is DIDL, ObjectID: FV:2 My Sonos without SONOS playlists|SQ: SONOS playlist|R:0/0 Radio station|R:0/1 Radio Shows|Q:0 aktuelle Playlist|S: Share|Categories A:ARTIST  A:ALBUMARTIST A:ALBUM A:GENRE A:COMPOSER A:TRACKS A:PLAYLISTS"
  },
  "SetAVTransportURI": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "CurrentURI": "",
      "CurrentURIMetaData": ""
    },
    "info": "NOT USED- set the player to specific playing mode: queue (x-rincon-queue:<macaddress>0<port>#0), stream, tv, ..."
  },
  "Play": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "Speed": 1
    },
    "info": "NOT USED- start playing - prereq is that uri is set (either stream or queue) . Response value is boolean" 
  },
  "RemoveAllTracksFromQueue": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0
    },
    "info": "NOT USED- flush queue"
  },
  "AddURIToQueue": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "EnqueuedURI": "",
      "EnqueuedURIMetaData": "",
      "DesiredFirstTrackNumberEnqueued": 0,
      "EnqueueAsNext": 1
    },
    "info": "USED- Add uri to queue, Enqueued meta data in DIDL light format"
  },
  "Seek": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "Unit": "REL_TIME",
      "Target": "00:01:00"
    },
    "info": "USED- REL_TIME move to position in current song - type string hh:mm:ss | TIME_DELTA move to position in current song- type string hh:mm:ss "
  },
  "SetBass": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "DesiredBass": "0"
    },
    "info": "USED- Set bass, value in range -10 ... 10 "
  },
  "GetBass": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "CurrentBass",
    "info": "USED- Type is string"
  },
  "SetTreble": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "DesiredTreble": "0"
    },
    "info": "USED- Set treble, value in range -10 ... 10 "
  },
  "GetTreble": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "CurrentTreble",
    "info": "USED- Type is string"
  },
  "SetEQ": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "EQType": "DialogLevel",
      "DesiredValue": "1"
    },
    "info": "USED- Set EQType (DialogLevel|NightMode|SubGain) and DesiredValue have to be set. DesiredValue depend on EQType - type number"
  },
  "GetEQ": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "EQType": "DialogLevel"
    },
    "returnValueName": "CurrentValue",
    "info": "USED- Type: string- EQType (DialogLevel|NightMode|SubGain)"
  },
  "SetCrossfadeMode": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "CrossfadeMode": 1
    },
    "info": "USED- Set CrossfadeMode 0 or 1 - type is number"
  },
  "GetCrossfadeMode": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "CrossfadeMode",
    "info": "USED- type: string- will return 0 or 1 "
  },
  "SetLoudness": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "Channel": "Master",
      "DesiredLoudness": "1"
    },
    "info": "USED- Set Loudness 0 or 1, type number"
  },
  "GetLoudness": {
    "endpoint": "/MediaRenderer/RenderingControl/Control",
    "argsValueName": "CurrentLoudness",
    "dataType": "string",
    "args": {
      "InstanceID": 0,
      "Channel": "Master"
    },
    "returnValueName": "CurrentLoudness",
    "info": "USED- Type: string- Get Loudness 0 or 1"
  },
  "ConfigureSleepTimer": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "NewSleepTimerDuration": "00:05:00"
    },
    "info": "USED- NewSleepTimerDuration: string, Duration in format hh:mm:ss"
  },
  "GetRemainingSleepTimerDuration": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "RemainingSleepTimerDuration",
    "dataType": "string",
    "info": "USED- Type: string- returns duration in format hh:mm:ss"
  },
  "CreateStereoPair": {
    "endpoint": "/DeviceProperties/Control",
    "args": {
      "InstanceID": 0,
      "ChannelMapSet": "RINCON_B8E9375831C001400:LF,LF;RINCON_000E58FE3AEA01400:RF,RF"
    },
    "info": "USED- pair stereo speakers, must be same model such as Play:1, parameters are uuid, format ${left}:LF,LF;${right}:RF,RF"
  },
  "SeparateStereoPair": {
    "endpoint": "/DeviceProperties/Control",
    "args": {
      "InstanceID": 0,
      "ChannelMapSet": "RINCON_B8E9375831C001400:LF,LF;RINCON_000E58FE3AEA01400:RF,RF"
    },
    "info": "USED- unpair stereo speakers - caution channelMapSet is only as example!!!!!!"
  },
  "GetTransportInfo": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "CurrentTransportState",
    "info": "NOT USED- Type: string- will return PLAYING, PAUSED_PLAYBACK, ...  CAUTION: Client in group will always return playing. Hint: <currentTransportState> and two more xml items are returnd"
  },
  "GetCurrentTransportActions": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "Actions",
  "info": "USED- Type: string- returns the currently avaialble actions: Set, Stop, Pause, Play, X_DLNA_SeekTime, Next, X_DLNA_SeekTrackNr"
  },
  "SetRelativeGroupVolume": {
    "endpoint": "/MediaRenderer/GroupRenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "Adjustment": "40"
    },
    "info": "USED- set group relative volume, number/integer in range -99 ... -1 or +1 .. +99. returns NewVolume"
  },
  "GetGroupVolume": {
    "endpoint": "/MediaRenderer/GroupRenderingControl/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "CurrentVolume",
  "info": "NOT USED- returns the current group volume "
  },
  "SetGroupMute": {
    "endpoint": "/MediaRenderer/GroupRenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "DesiredMute": "1"
    },
    "info": "NOT USED- set group mute to on (1) or off (0)"
  },
  "GetGroupMute": {
    "endpoint": "/MediaRenderer/GroupRenderingControl/Control",
    "args": {
      "InstanceID": 0
    },
    "returnValueName": "CurrentMute",
  "info": "NOT USED- get group mute on (1) or off (0)"
  }, 
  "SnapshotGroupVolume": {
    "endpoint": "/MediaRenderer/GroupRenderingControl/Control",
    "args": {
      "InstanceID": 0
    },
    "info": "USED- snapshots the current volume relation in group for usage of set relative group volume"
  },
  "SetGroupVolume": {
    "endpoint": "/MediaRenderer/GroupRenderingControl/Control",
    "args": {
      "InstanceID": 0,
      "DesiredVolume": 10
    },
    "info": "USED- set the specified volume to all players"
  },
  "SaveQueue": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "Title": "unknown",
      "ObjectID": ""
    },
    "info": "USED- Save queue to SONOS playlist"
  },
  "DelegateGroupCoordinationTo": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0,
      "NewCoordinator": "RINCON_xxxxx01400",
      "RejoinGroup": true
    },
    "info": "USED- player will delegate coordination and optionally leave group (Rejoingroup = false). NewCoordinator must exist!"
  }, 
  "BecomeCoordinatorOfStandaloneGroup": {
    "endpoint": "/MediaRenderer/AVTransport/Control",
    "args": {
      "InstanceID": 0
    },
    "info": "USED- player becomes a stand alone group"
  },
  "AddMember": {
    "endpoint": "/GroupManagement/Control",
    "args": {
      "InstanceID": 0,
      "MemberID": ""
    },
    "info": "NOT USED- DONT USE! Does not work and is confusing the grouping system -- use SetAVTransport instead"
  },
  "RemoveMember": {
    "endpoint": "/GroupManagement/Control",
    "args": {
      "InstanceID": 0,
      "MemberID": ""
    },
    "info": "NOT USED- DONT USE! Does not work and is confusing the grouping system- use BecomeCoordinatorOfStandaloneGroup instead"
  }
}
